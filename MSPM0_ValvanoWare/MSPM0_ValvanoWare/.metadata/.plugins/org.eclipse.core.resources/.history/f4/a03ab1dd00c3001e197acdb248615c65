//****************** ECE319K_Lab2.s ***************
// Your solution to Lab 2 in assembly code
// Author: Noah Graf
// Last Modified: Your date
// ECE319K Spring 2024 (ECE319H students do Lab2H)
   .equ GPIOB_RSTCTL,   0x400A2804
   .equ GPIOB_PWREN,    0x400A2800
   .equ GPIOB_DOE31_0,  0x400A32C0
   .equ GPIOB_DOUT31_0, 0x400A3280
   .equ GPIOB_DIN31_0,  0x400A3380
   .equ IOMUXPB0,       0x40428004+4*11
   .equ IOMUXPB1,       0x40428004+4*12
   .equ IOMUXPB2,       0x40428004+4*14
   .equ IOMUXPB3,       0x40428004+4*15
   .equ IOMUXPB16,      0x40428004+4*32
   .equ IOMUXPB17,      0x40428004+4*42
   .equ IOMUXPB18,      0x40428004+4*43
Duty_Stack:
   .equ CYCLE1, 0x00003E80 //h = .002
   .equ CYCLE2, 0x0000A410 //h = .006
   .equ CYCLE3, 0x00019640 //h = .013
   .equ CYCLE4, 0x0001D4C0 //h = .015
   .equ CYCLEEND, 0x0




//8,000 = 1ms

        .data
        .align 2
Duty_Stack2:
   .space 4
   .space 4
   .space 4
   .space 4
   .space 4

// Declare global variables here if needed
// with the .space assembly directive

        .text
        .thumb
        .align 2
        .global EID
EID:    .string "NTG393" // replace ZZZ123 with your EID here
        .align 2

// this allow your Lab2 programs to the Lab2 grader
        .global Lab2Grader
// this allow the Lab2 grader to call your Lab2 program
        .global Lab2
// these two allow your Lab2 programs to all your Lab3 solutions
        .global Debug_Init
        .global Dump

// Switch input: PB2 PB1 or PB0, depending on EID
// LED output:   PB18 PB17 or PB16, depending on EID
// logic analyzer pins PB18 PB17 PB16 PB2 PB1 PB0
// analog scope pin PB20
Lab2:
// Initially the main program will
//   set bus clock at 80 MHz,
//   reset and power enable both Port A and Port B
// Lab2Grader will
//   configure interrupts  on TIMERG0 for grader or TIMERG7 for TExaS
//   initialize ADC0 PB20 for scope,
//   initialize UART0 for grader or TExaS
     MOVS R0,#1  // 0 for info, 1 debug with logic analyzer, 2 debug with scope, 10 for grade
     BL   Lab2Grader
     BL   Debug_Init // your Lab3
     BL   Lab2Init // initialize input and output pins
// other initializations
loop://Change switch on PB3
	 //LED on PB17
	 PUSH {R2, LR}
	 BL Switch_Input
	 POP {R2, LR}
	 MOVS R3, R0
	 CMP R3, #8
	 BNE step

continue:
	 LDR R0, [R2]
	 BL Delay
	 LDR R5, =160000
	 LDR R0, [R2]
	 SUBS R5, R5, R0//sets the length variable


	 LDR R1, =GPIOB_DOUT31_0
   	 LDR R0, [R1]
   	 LDR R3, =0b100000000000000000 //mask of bit 17 CHANGE
     EORS R0, R0, R3
     STR R0, [R1]//toggles bit 17

     MOVS R0, R5
     BL Delay

     LDR R1, =GPIOB_DOUT31_0
   	 LDR R0, [R1]
   	 LDR R3, =0b100000000000000000 //mask of bit 17 CHANGE
     EORS R0, R0, R3
     STR R0, [R1]//toggles bit 17



     
     B    loop

step:
     ADDS R2, R2, #4
     LDR R0, [R2]
     CMP R0, #0
     BEQ reset

     B continue

reset:
     SUBS R2, R2, #16
     B continue
Delay:
     SUBS R0, R0, #2
dloop:
	 SUBS R0, R0, #4
	 NOP
	 BHS dloop
	 BX LR
Switch_Input://DO NOT USE R0-R3

     LDR R1, =GPIOB_DIN31_0
     MOVS R2, #0x08
     LDR R0, [R1]
     ANDS R0, R0, R2
     BX LR
// make switch the input, LED the output
// PortB is already reset and powered
// Set IOMUX for your input and output
// Set GPIOB_DOE31_0 for your output (be friendly)
Lab2Init:
   LDR R1, =0x00040081
   LDR R0, =IOMUXPB3
   STR R1, [R0]//Inits switch on PB3


   LDR R1, =0x00000081
   LDR R0, =IOMUXPB17
   STR R1, [R0]//Enables PB17


   LDR R0, =GPIOB_DOE31_0
   LDR R1, [R0]
   LDR R2, =0b100000000000000000 //mask of bit 17 CHANGE
   ORRS R1, R1, R2//sets bit 17
   STR R1, [R0]

   LDR R1, =GPIOB_DOUT31_0
   LDR R0, [R1]
   ORRS R0, R0, R2
   STR R0, [R1]//sets bit 17 of DOUT
   LDR R2, =Duty_Stack2

   LDR R0, =0x00003E80
   STR R0, [R2]

   LDR R0, =0x0000A410
   STR R0, [R2, #4]

   LDR R0, =0x00019640
   STR R0, [R2, #8]

   LDR R0, =0x0001D4C0
   STR R0, [R2, #12]

   LDR R0, =0x0
   STR R0, [R2, #16]



   BX   LR


   .end
